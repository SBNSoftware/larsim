#include "simulationservices_sbnd.fcl"
#include "fluxfilter.fcl"

process_name: FluxReader

services:
{
  TFileService: { fileName: "flux_hist.root" }
  RandomNumberGenerator: {} #ART native random number generator
  # NuRandomService:   @local::microboone_seedservice
  TimeTracker:       {}
  FileCatalogMetadata:     @local::art_file_catalog_mc
  # UBEventWeight: @local::microboone_eventweight_service
  # Geometry: @local::microboone_geo
  # ExptGeoHelperInterface: @local::microboone_geometry_helper
  # IFDH: {}
  # @table::sbnd_g4_services
  @table::sbnd_basic_services
  @table::sbnd_random_services
}


source:
{
  fileNames:       []
  module_type:	   FluxReader
  skipEvents:      0
  maxEvents:       -1
  inputType:       "gsimple"
  nBins:           200
  Elow:            0
  Ehigh:           10
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName:    "fluxreader.root"
   compressionLevel: 1
   dataTier:    "simulated"
   SelectEvents: [ filter ]
  }
}

physics:
{
 producers:
 {
 }
 filters:
 {
   fluxfilter: @local::flux_filter
 }

 filter: [ fluxfilter ]
 stream1:   [ out1 ]
 trigger_paths: [ filter ]
 end_paths: [ stream1 ]
}
